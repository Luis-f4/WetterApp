Die Klassen implementieren eine JWT-basierte Authentifizierung in einer Spring Boot-Anwendung:

JwtFilter: Überprüft eingehende Anfragen auf ein gültiges JWT. Wenn ein Token vorhanden und gültig ist, authentifiziert es den Benutzer im Security-Kontext.

JWTService: Erzeugt, validiert und analysiert JWT-Tokens. Es erstellt den Token mit Benutzername und Ablaufzeit und validiert ihn später anhand des geheimen Schlüssels.

MyUserDetailsService: Lädt Benutzerdetails aus der Datenbank, um den Benutzer zur Authentifizierung zu identifizieren.

SecurityConfig: Konfiguriert die Sicherheitsregeln, deaktiviert CSRF, erlaubt CORS und setzt JwtFilter als Filter für HTTP-Anfragen ein.

UserController: Stellt Endpunkte für Registrierung, Login und Token-Überprüfung bereit.

UserPrincipal und Users: UserPrincipal verwaltet die Benutzerrollen und -rechte; Users repräsentiert die Benutzerentität in der Datenbank.

UserService: Verarbeitet Registrierung und Login, speichert neue Benutzer und gibt nach erfolgreicher Authentifizierung ein Token zurück.
