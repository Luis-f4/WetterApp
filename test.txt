Ich will dass wenn die seite aktualisiert wird die ckecckbox checkExpiredLicenses trodzdem ausgewählt bleibt:

import './MainContent.css'
import Table from './Table';
import TableLicense from './TableLicense'
import React, {useEffect, useState} from "react";
import CreatePopup from './CreatePopup'
export default function MainContent() {

    const [mode, setMode] = useState('License');
    const [modeButton, setModeButton] = useState('Show Employee');
    const [title, setTitle] = useState('Licenses');
    const [createPopupOn, setCreatePopupOn] = useState(false);
    const [addButtonTitle, setAddButtonTitle] = useState('Add new license');
    const [showExpiredLicenses, setShowExpiredLicenses] = useState(false);

    
    const changeMode = () => {

        if(mode === 'License'){
            setMode('Employee');
            setModeButton('Show Licenses'); 
            setTitle('Licensing');
            setAddButtonTitle('Add new licensing');
            
        }else{
            setMode('License');
            
            setModeButton('Show Employee');
            setTitle('Licenses');
            setAddButtonTitle('Add new license');
            
        }

}


    const closePopup = () => {
        setCreatePopupOn(false); 
    };

    const handleClick = () => {
        setCreatePopupOn(true)
    }

    const handleCheckboxChange = (event) =>{
        setShowExpiredLicenses(event.target.checked);
    }
    return (
<>
<body className='MainContent'>



<div className="LizenzenStat">
Available licenses:
<br/>
Allocated licenses:
<br/>
Total licenses:


</div>

<h1 className='Headline'>{title}</h1>

<br/>
<br/>
<br/>
<br/>

<button className='SwitchTable' onClick={changeMode}>{modeButton}</button>

<input type='text' className='Searchbar' placeholder="Einträge durchsuchen" /> {/* onChange={handleChange}
     onKeyDown={handleSearchEnter} */}


<button type="button" className='Search' >Search</button> {/* onClick={handleSearch} */}

<label htmlFor="checkExpiredLicenses">Abgelaufene Lizenzen anzeigen</label>
<input type="checkbox" id='checkExpiredLicenses' checked={showExpiredLicenses} onChange={handleCheckboxChange} />


<div>
<button className='CreateButton' onClick={handleClick}>{addButtonTitle}</button>
</div>
</body> 
<Table mode={mode} showExpiredLicenses={showExpiredLicenses}/>

{createPopupOn && <CreatePopup onClose={closePopup} mode={mode} />}
</>
    )
}





import TableLicense from "./TableLicense";
import TableEmployee from "./TableEmployee";
const Table = ({mode, showExpiredLicenses}) => {

    //console.log("showExpiredLicenses: ", showExpiredLicenses);
    
    if(showExpiredLicenses == true){
        console.log("true");
    }else{
        console.log("false");
    }


    if(mode === 'License'){
        return(
            <TableLicense showExpiredLicenses={showExpiredLicenses}/>
        );
    }else{
        return(
            <TableEmployee showExpiredLicenses={showExpiredLicenses}/>
        )
    } 

}
 
export default Table;





import './Table.css';
import TableLicenseRow from './TableLicenseRow';
import { useEffect, useState } from 'react';
import Popup from './Popup';

const TableLicense = ({showExpiredLicenses}) => {

    console.log("showExpiredLicenses in License: ", showExpiredLicenses);
    const [data, setData] = useState([]);
    const [selectedRow, setSelectedRow] = useState(null); // Zustand für die ausgewählte Zeile

    var url ="";
    if(showExpiredLicenses){
        url = 'http://localhost:8080/getAllLicensesExpiringSoon';
    }else{
        url = 'http://localhost:8080/getAllLicenses';
    }

    useEffect(() => {
        fetch(url, {
            method: 'GET',
            headers: {
                'Authorization': 'Basic ' + btoa('Bart:123')
            }
        })
        .then(response => response.json())
        .then(data => setData(data))
        .catch(error => console.error('Error fetching data:', error));
    }, []);

    const handleEditClick = (row) => {
        setSelectedRow(row); // Zeile speichern und Popup öffnen
    };

    const closePopup = () => {
        setSelectedRow(null); // Popup schließen
    };

    return (
        <>
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Amount</th>
                        <th>Available</th>
                        <th>Start Date</th>
                        <th>Expiration Date</th>
                        <th>PO (new)</th>
                        <th>PO (old)</th>
                        <th>Subscription Pack</th>
                    </tr>
                </thead>

                <tbody>
                    {data.map((row, index) => (
                        <TableLicenseRow key={index} row={row} onEdit={handleEditClick} mode={'License'} />
                    ))}
                </tbody>
            </table>

            {selectedRow && <Popup row={selectedRow} onClose={closePopup} mode={"License"} />}
        </>
    );
}

export default TableLicense;

