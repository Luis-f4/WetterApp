let player;
let jumpForce = 0;
let movement = 0;
let ground;
let platforms = [];
let coin;

let platformDirection = 1;
let coinDirection = 1;

function setup() {
    createCanvas(1250, 550); // Neue Leinwandgröße
    resetGame();
}

function resetGame() {
    player = createVector(width * 0.5, height * 0.85); // Spieler mittig, 15% vom unteren Rand
    platforms = [
        createVector(width * 0.3, height * 0.85),  // Plattform 1
        createVector(width * 0.52, height * 0.65), // Plattform 2
        createVector(width * 0.8, height * 0.45)   // Plattform 3
    ];
    coin = createVector(width * 0.96, height * 0.36); // Coin rechts oben
    ground = height * 0.9; // Boden leicht über dem unteren Rand

    document.getElementById("h1").style.opacity = 0;
    document.getElementById("btn").style.display = "none";
}

function restartGame() {
    resetGame();
    loop();
}

function drawGame() {
    background('DeepSkyBlue');
    rectMode(CENTER);

    // Spieler zeichnen
    fill('white');
    rect(player.x, player.y, width * 0.04, height * 0.09); // Spieler relativ skalieren

    // Plattformen zeichnen
    fill('green');
    for (let platform of platforms) {
        rect(platform.x, platform.y, width * 0.12, height * 0.036); // Plattformen skalieren
    }

    // Coin zeichnen
    if (coin) {
        fill('gold');
        ellipse(coin.x, coin.y, width * 0.024, height * 0.043); // Coin skalieren
    }

    addNewPlatform();
}

function draw() {
    drawGame();

    // Bewegung und Schwerkraft
    player.y += jumpForce;
    player.x += movement;

    let onGround = false;

    // Überprüfung: Boden oder Plattformen
    if (player.y >= ground) {
        onGround = true;
        player.y = ground;
    } else if (
        player.x + width * 0.02 >= newPlatform.x - width * 0.06 &&
        player.x - width * 0.02 <= newPlatform.x + width * 0.06 &&
        player.y + height * 0.045 >= newPlatform.y - height * 0.018 &&
        player.y + height * 0.045 <= newPlatform.y + height * 0.018
    ) {
        onGround = true;
        player.y = newPlatform.y - height * 0.072;
    } else {
        for (let platform of platforms) {
            if (
                player.x + width * 0.02 >= platform.x - width * 0.06 &&
                player.x - width * 0.02 <= platform.x + width * 0.06 &&
                player.y + height * 0.045 >= platform.y - height * 0.018 &&
                player.y + height * 0.045 <= platform.y + height * 0.018
            ) {
                onGround = true;
                player.y = platform.y - height * 0.072;
                break;
            }
        }
    }

    // Bewegliche Plattform
    platforms[2].x += platformDirection * (width * 0.0016);

    if (platforms[2].x <= width * 0.5) {
        platformDirection = 1;
    } else if (platforms[2].x >= width * 0.72) {
        platformDirection = -1;
    }

    // Bewegliche Münze
    if (coin.y <= height * 0.27) {
        coinDirection = 1;
    } else if (coin.y >= height * 0.45) {
        coinDirection = -1;
    }

    coin.y += coinDirection * (height * 0.0018);

    // Prüfung: Coin eingesammelt
    if (coin && dist(player.x, player.y, coin.x, coin.y) < width * 0.032) {
        coin = null;
        platforms = null;
        player = null;

        document.getElementById("h1").style.opacity = 1;
        document.getElementById("btn").style.display = "block";

        noLoop();
    }

    if (!onGround) {
        jumpForce += height * 0.0009;
    } else {
        jumpForce = 0;
    }

    // Springen
    if (keyIsDown(32) && onGround) {
        jumpForce = -height * 0.022;
    }

    // Links/Rechts Bewegung
    if (keyIsDown(LEFT_ARROW)) {
        movement = -width * 0.008;
    } else if (keyIsDown(RIGHT_ARROW)) {
        movement = width * 0.008;
    } else {
        movement = 0;
    }
}

let newPlatform;

function addNewPlatform() {
    newPlatform = createVector(width * 0.08, height * 0.82); // Neue Plattform
    rect(newPlatform.x, newPlatform.y, width * 0.12, height * 0.036);
}
