const TableRow = ({ row, onEdit, mode }) => {
    let idLIcensing = null;

    if (mode !== 'License') {
        idLIcensing = row[7];
        console.log("LicensingID: ", idLIcensing + "  email: " + row[0] + "  sub pack: " + row[3]);
    }

    const commonCells = [
        <td key={0}>{row[0]}</td>,
        <td key={1}>{row[1]}</td>,
        <td key={2}>{row[2]}</td>,
        mode === 'License' && <td key={7}>{row[7]}</td>,
        <td key={3}>{row[3]}</td>,
        <td key={4}>{row[4]}</td>,
        <td key={5}>{row[5]}</td>,
        <td key={6}>{row[6]}</td>
    ].filter(Boolean);

    return (
        <tr>
            {commonCells}
            <EditButton onClick={() => onEdit(row, idLIcensing)} />
        </tr>
    );
};

export default TableRow;








import { useEffect, useState } from 'react';
import TableLicenseRow from './TableLicenseRow';
import Popup from './Popup';

const TableEmployee = () => {
    const [data, setData] = useState([]);
    const [selectedRow, setSelectedRow] = useState(null);
    const [selectedIdLIcensing, setSelectedIdLIcensing] = useState(null); // Zustand für Licensing ID

    useEffect(() => {
        fetch('http://localhost:8080/allLicensing', {
            method: 'GET',
            headers: {
                'Authorization': 'Basic ' + btoa('Bart:123')
            }
        })
        .then(response => response.json())
        .then(data => setData(data))
        .catch(error => console.error('Error fetching data:', error));
    }, []);

    const handleEditClick = (row, idLIcensing) => {
        setSelectedRow(row);
        setSelectedIdLIcensing(idLIcensing); // Licensing ID speichern
    };

    const closePopup = () => {
        setSelectedRow(null);
        setSelectedIdLIcensing(null); // Zurücksetzen der Licensing ID
    };

    return (
        <>
            <table>
                <thead>
                    <tr> 
                        <th>E-Mail</th>
                        <th>Department</th>
                        <th>Company</th>
                        <th>Subscription Pack</th>
                        <th>Expiration Date</th>
                        <th>PO (new)</th>
                        <th>PO (old)</th>
                    </tr>
                </thead>
                <tbody>
                    {data.map((row, index) => (
                        <TableLicenseRow key={index} row={row} onEdit={handleEditClick} />
                    ))}
                </tbody>
            </table>

            {selectedRow && <Popup row={selectedRow} idLIcensing={selectedIdLIcensing} onClose={closePopup} mode={"Employee"} />}
        </>
    );
};

export default TableEmployee;















const Popup = ({ row, idLIcensing, onClose, mode }) => {
    const [originalRow] = useState(row ? [...row] : []);
    const [currentRow, setCurrentRow] = useState(row ? [...row] : []);

    if (!row) return null;

    const handleInputChange = (e, index) => {
        const newRow = [...currentRow];
        newRow[index] = e.target.value;
        setCurrentRow(newRow);
    };

    const resetChanges = () => new Promise(resolve => {
        setCurrentRow([...originalRow]);
        resolve();
    });

    const handleClick = async () => {
        await resetChanges();
        onClose();
    };

    const handleUpdate = async () => {
        if (mode === 'License') {
            await fetch(`http://localhost:8080/updateLicense/${currentRow[0]}/${currentRow[1]}/${idLIcensing}/${currentRow[3]}/${currentRow[4]}/${currentRow[5]}/${currentRow[6]}`, {
                method: "PUT",
                headers: {
                    'Authorization': 'Basic ' + btoa('Bart:123')
                }
            });
        } else {
            await fetch(`http://localhost:8080/updateEmployee/${currentRow[0]}/${currentRow[1]}/${currentRow[2]}/${originalRow[0]}/${originalRow[1]}/${originalRow[2]}`, {
                method: "PUT",
                headers: {
                    'Authorization': 'Basic ' + btoa('Bart:123')
                }
            });
        }

        onClose();
        window.location.reload();
    };

    const renderInputs = () => {
        return (
            <>
                <input className='testInput' value={currentRow[0]} onChange={(e) => handleInputChange(e, 0)} disabled={mode === 'License'}/>
                <input value={currentRow[1]} onChange={(e) => handleInputChange(e, 1)} />
                <input value={currentRow[2]} onChange={(e) => handleInputChange(e, 2)} disabled={mode === 'License'}/>
                {mode === 'License' && <input value={idLIcensing} disabled />} {/* idLIcensing anzeigen */}
                <input value={currentRow[3]} onChange={(e) => handleInputChange(e, 3)} disabled={mode !== 'License'}/>
                <input value={currentRow[4]} onChange={(e) => handleInputChange(e, 4)} disabled={mode !== 'License'}/>
                <input value={currentRow[5]} onChange={(e) => handleInputChange(e, 5)} disabled={mode !== 'License'}/>
                <input value={currentRow[6]} onChange={(e) => handleInputChange(e, 6)} disabled={mode !== 'License'}/>
            </>
        );
    };

    return (
        <div id="PopupMainDiv">
            {/* Dein restlicher Popup Code */}
        </div>
    );
};

export default Popup;

